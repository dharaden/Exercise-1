---
title: "Transdiagnostic Sleep"
author: "Dustin Haraden"
date: "September 7, 2018"
output: html_document
editor_options: 
  chunk_output_type: console
---
```{r load_packages load_data, message=FALSE, warning=FALSE, include=FALSE}
library(lavaan)
library(psych)
library(stargazer)
library(sjPlot)
library(semPlot)
library(broom)
library(tidyverse)

##Be sure to run "Data Prep" markdown file to prepare the MASTER file!!!
MASTER <- read.csv("Raw Files/Full Sample/Trans_Sleep_Master.csv")
Item <- read.csv("Raw Files/Full Sample/Trans_Sleep_Items.csv")

MASTER <- MASTER %>% 
  filter(Age>12 & Age<23)


Item <-  Item %>%
  filter(Age>12 & Age<23)

#Can now load in the parcel data since it was written to a csv 
 Parcel <- read.csv('Raw Files/Full Sample/Trans_Sleep_Parcels.csv')

#Merge in Sleep data to the Parcel dataset 
 Parcel <- select(MASTER, ID, contains('_mean')) %>%
           full_join(Parcel, by='ID')
 
 

```


# Results
## Descriptives 
```{r Descriptives, include=F, echo=F}

describe <- select(MASTER, 2:14, 17:18, 20, 22, 24:26)


#stargazer(describe, type='html', out="describe.html")

sjt.corr(describe, show.p = FALSE, triangle="upper", 
           title = "Table 1 - Correlations",
           #string.diag = c("13.59 (2.3)", #means and standard deviations on the diagonal
            #               "4.59 (4.85)",
              #             "5 (5.33)",
               #            "4.17 (5.25)",
                 #          "6.22 (5.63)",
                #           "7.34 (5.66)",
                  #         "4.73 (4.45)",
                   #        "6.52 (6.19)",
                    #       "7.63 (5.97)"), 
           CSS=list(css.thead="border-top:double black; font-weight:normal; #font-size:0.9em;",
         css.firsttablecol="font-weight:normal; font-size:0.9em;"),file="Descriptives_Cor_Table1.html")

```

#EFA
Conducting EFA's to determine the parcels for each of the factors 
```{r EFA's for each syndrome}

###Internalizing - Should I take sleep out??

  #CDI - Sleep item #16
    CDI <- select(Item, ID, contains('cdi'))
      efa.cdi<-select(CDI, -ID) %>% 
        fa(nfactors=1,rotate="geominQ",fm="ml")
        print.psych(efa.cdi,sort=T)
    
    #Creating parcels based on the loadings onto a single factor using balanced-item parceling 
    CDI_par <- CDI %>%
      rowwise() %>%
      mutate(CDIp_1 = mean(c(CDI_SR_7, CDI_SR_1, CDI_SR_4, CDI_SR_20, CDI_SR_21, 
                             CDI_SR_19, CDI_SR_5, CDI_SR_27, CDI_SR_26),na.rm=T), 
             CDIp_2 = mean(c(CDI_SR_14, CDI_SR_9, CDI_SR_2, CDI_SR_24, CDI_SR_22, 
                             CDI_SR_16, CDI_SR_15, CDI_SR_13, CDI_SR_25), na.rm=T),
             CDIp_3 = mean(c(CDI_SR_3, CDI_SR_11, CDI_SR_12, CDI_SR_6, CDI_SR_10, 
                             CDI_SR_17, CDI_SR_23, CDI_SR_18, CDI_SR_8), na.rm=T)) %>%
      select(ID, contains('CDIp'))
  
  #Separation - Sleep items #17 & #26
    SEP <- Item %>%
      rowwise() %>%
      select(ID, MASC_4, MASC_7, MASC_9, MASC_17,
                            MASC_19, MASC_23, MASC_26, MASC_30,
                            MASC_34)
    #Run EFA
    efa.sep <- select(SEP, -ID) %>% 
      fa(SEP,nfactors=1,rotate="geominQ",fm="ml")
    print.psych(efa.sep,sort=T)
    #Creating parcels based on the loadings onto a single factor using balanced-item parceling 
    SEP_par <- SEP %>%
      rowwise() %>%
      mutate(SEP_1 = mean(c(MASC_9, MASC_4, MASC_23), na.rm=T),
             SEP_2 = mean(c(MASC_19, MASC_26,MASC_34), na.rm=T),
             SEP_3 = mean(c(MASC_7, MASC_30, MASC_17), na.rm=T)) %>%
      select(ID, contains('SEP'))
    
  #Physical Symptoms 
    PHYS <- Item %>%
      rowwise() %>%
      select(ID, MASC_1, MASC_6, MASC_8, MASC_12,
                  MASC_15, MASC_18, MASC_20, MASC_24,
                  MASC_27, MASC_31, MASC_35, MASC_38)
    #Run EFA
    efa.phys <- select(PHYS, -ID) %>% 
      fa(nfactors=1,rotate="geominQ",fm="ml")
    print.psych(efa.phys, sort=T)
    #Creating parcels based on the loadings onto a single factor using balanced-item parceling 
    PHYS_par <- PHYS %>%
      rowwise() %>%
      mutate(PHYS_1 = mean(c(MASC_8, MASC_31, MASC_38, MASC_15), na.rm=T),
             PHYS_2 = mean(c(MASC_27, MASC_24, MASC_1, MASC_18), na.rm=T),
             PHYS_3 = mean(c(MASC_12, MASC_35, MASC_20, MASC_6), na.rm=T)) %>%
      select(ID, contains('PHYS'))
    
    
  #Social Anxiety
    SOC <- Item %>%
      select(ID, MASC_3, MASC_10, MASC_14, MASC_16,
                            MASC_22, MASC_29, MASC_33, MASC_37,
                            MASC_39)
    efa.soc <- select(SOC, -ID) %>% 
      fa(nfactors=1,rotate="geominQ",fm="ml")
    print.psych(efa.soc, sort=T)
    
    #Creating Parcels 
    SOC_par <- SOC %>%
      rowwise() %>%
      mutate(SOC_1 = mean(c(MASC_29, MASC_10, MASC_33), na.rm=T),
             SOC_2 = mean(c(MASC_3, MASC_22, MASC_37), na.rm=T),
             SOC_3 = mean(c(MASC_16, MASC_14, MASC_39), na.rm=T)) %>% 
      select(ID, contains('SOC'))
    
    
    
    #Penn State Worry Questionnaire 
    PSWQ  <- select(Item, ID, contains('PSWQ'))
    efa.pswq <- select(PSWQ, -ID) %>% 
      fa(nfactors=1, rotate='geominQ',fm='ml')
    print.psych(efa.pswq, sort=T)
    
    #Creating Parcels
    PSWQ_par <- PSWQ %>%
      rowwise() %>%
      mutate(PSWQp_1 = mean(c(PSWQ_C_13, PSWQ_C_4, PSWQ_C_7, PSWQ_C_9), na.rm=T),
             PSWQp_2 = mean(c(PSWQ_C_6, PSWQ_C_3, PSWQ_C_14, PSWQ_C_2), na.rm=T),
             PSWQp_3 = mean(c(PSWQ_C_12, PSWQ_C_8, PSWQ_C_11, PSWQ_C_10, 
                              PSWQ_C_1, PSWQ_C_5), na.rm=T)) %>% 
      select(ID, contains('PSWQp'))
      
###Externalizing
    #YSR_CD
    YSR_CD <-  Item %>%
      select(ID, CBCL_16, CBCL_19, CBCL_1, CBCL_23,
                           CBCL_2, CBCL_3, CBCL_24, CBCL_5,
                           CBCL_6, CBCL_7, CBCL_8, CBCL_9,
                           CBCL_32, CBCL_11)
    efa.cd <- select(YSR_CD, -ID) %>% 
      fa(nfactors=1, rotate='geominQ',fm='ml')
    print.psych(efa.cd, sort=T)
    
    Con_par <- YSR_CD %>% 
      rowwise() %>%
      mutate(Con_1 = mean(c(CBCL_2, CBCL_32, CBCL_6, CBCL_7), na.rm=T),
             Con_2 = mean(c(CBCL_16, CBCL_9, CBCL_5, CBCL_1), na.rm=T),
             Con_3 = mean(c(CBCL_23, CBCL_3, CBCL_11, CBCL_8, CBCL_19, CBCL_24), na.rm=T)) %>% 
      select(ID, contains('Con'))
    
    
    #YSR_ODD
    YSR_ODD <-  Item %>%
      select(ID, CBCL_14,CBCL_20,CBCL_21,CBCL_27,CBCL_31)
    efa.odd <- select(YSR_ODD, -ID) %>% 
      fa(nfactors=1, rotate='geominQ',fm='ml')
    print.psych(efa.odd, sort=T)
    
    ODD_par <- YSR_ODD %>% 
      rowwise() %>%
      mutate(ODD_1 = mean(c(CBCL_14, CBCL_27), na.rm=T),
             ODD_2 = mean(c(CBCL_31, CBCL_20), na.rm=T),
             ODD_3 = CBCL_21) %>% 
      select(ID, contains('ODD'))
    
    
    
    #SNAP_Hyp
    SNAP_Hyp <- Item %>%
      select(ID, SNAP_SR_1, SNAP_SR_2, SNAP_SR_3, SNAP_SR_4, SNAP_SR_5, 
           SNAP_SR_6, SNAP_SR_7, SNAP_SR_8, SNAP_SR_9, SNAP_SR_10)
    efa.hyp <- select(SNAP_Hyp, -ID) %>% 
      fa(nfactors=1, rotate='geominQ',fm='ml')
    print.psych(efa.hyp, sort=T)
    
    Hyp_par <- SNAP_Hyp %>% 
      rowwise() %>%
      mutate(Hyp_1 = mean(c(SNAP_SR_10, SNAP_SR_9, SNAP_SR_3), na.rm=T),
             Hyp_2 = mean(c(SNAP_SR_5, SNAP_SR_2, SNAP_SR_8), na.rm=T),
             Hyp_3 = mean(c(SNAP_SR_4, SNAP_SR_7, SNAP_SR_1, SNAP_SR_6), na.rm=T)) %>% 
      select(ID, contains('Hyp'))
    
    
    #SNAP_In
    SNAP_In <- Item %>% 
      select(ID, SNAP_SR_11, SNAP_SR_12, SNAP_SR_13, SNAP_SR_14, SNAP_SR_15, 
           SNAP_SR_16, SNAP_SR_17, SNAP_SR_18, SNAP_SR_19, SNAP_SR_20)
    efa.in <- select(SNAP_In, -ID) %>% 
      fa(nfactors=1, rotate='geominQ',fm='ml')
    print.psych(efa.in, sort=T)
    
    In_par <- SNAP_In %>% 
      rowwise() %>%
      mutate(In_1 = mean(c(SNAP_SR_20, SNAP_SR_18, SNAP_SR_15), na.rm=T),
             In_2 = mean(c(SNAP_SR_17, SNAP_SR_12, SNAP_SR_11), na.rm=T),
             In_3 = mean(c(SNAP_SR_16, SNAP_SR_13, SNAP_SR_14, SNAP_SR_19), na.rm=T)) %>% 
      select(ID, contains('In'))
    
    
    #SDQ_Prosocial_rev
    SDQ_anti <- Item %>%
      select(ID, SDQ_SR_1, SDQ_SR_4, SDQ_SR_9, SDQ_SR_17, SDQ_SR_20)
    efa.anti <- select(SDQ_anti, -ID) %>% 
      fa(nfactors=1, rotate='geominQ',fm='ml')
    print.psych(efa.anti, sort=T)
    #Compute Parcels
    Anti_par <- SDQ_anti %>% 
      rowwise() %>%
      mutate(Anti_1 = mean(c(SDQ_SR_20, SDQ_SR_4), na.rm=T),
             Anti_2 = mean(c(SDQ_SR_17, SDQ_SR_1), na.rm=T),
             Anti_3 = (SDQ_SR_9)) %>% 
      select(ID, contains('Anti'))


```

#Create Dataframe with only the parecelled items 
```{r Parcel Data}

parcel <- select(MASTER, ID, Age, Gender) %>% 
  full_join(CDI_par, by='ID') %>% 
  full_join(SEP_par, by='ID') %>%
  full_join(PHYS_par, by='ID') %>% 
  full_join(SOC_par, by='ID') %>%
  full_join(PSWQ_par, by='ID') %>%
  full_join(Con_par, by='ID') %>%
  full_join(ODD_par, by='ID') %>%
  full_join(Hyp_par, by='ID') %>%
  full_join(In_par, by='ID') %>%
  full_join(Anti_par, by='ID')

write_csv(parcel, 'Raw Files/Full Sample/Trans_Sleep_Parcels.csv')

```


## Creating the Syndrome Model
```{r Syndrome Model Construction}
sdrome <- '
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        
        SEP =~ SEP_1 + SEP_2 + SEP_3

        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3

        SOC =~ SOC_1 + SOC_2 + SOC_3

        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

        CON =~ Con_1 + Con_2 + Con_3

        ODD =~ ODD_1 + ODD_2 + ODD_3 

        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3

        Ina =~ In_1 + In_2 + In_3

        Anti =~ Anti_1 + Anti_2 + Anti_3
        '
    sdrome.fit <- cfa(sdrome, data=Parcel, missing='fiml')
    #summary(sdrome.fit, fit.measures=T)
    
    
    #MI.sdrome<-modindices(sdrome.fit)
    #arrange(MI.sdrome, desc(mi)) 
```

##Internalizing/Externalizing
```{r Int/Ext}

achen <- '
  #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ Hyp + CON + ODD + Ina + Anti


    
      #Modification Indices
      CON ~~ ODD
'

achen.fit <- sem(achen, data=Parcel, missing='fiml')
#summary(achen.fit, fit.measures=T, standardized=T)

#MI.1<-modindices(achen.fit)
#arrange(MI.1, desc(mi)) 

```


##P-Factor
```{r Bifactor}

pfactor <- '
  #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ CON + ODD + Hyp + Ina + Anti
  P =~ PHYS + CDI + SEP + PSWQ + CON + ODD + Hyp + Ina + Anti



  #Fixing variance of variables with negative variance & variance that was not significantly different than zero
    #Hyp ~~ 0*Hyp
    #ODD ~~ 0*ODD
    #CON ~~ 0*CON

'

p.fit <- sem(pfactor, data=Parcel, orthogonal = T, missing='fiml')
summary(p.fit, fit.measures=T, standardized=T)

#MI.p<-modindices(p.fit)
#arrange(MI.p, desc(mi)) 

```

##Table of Structure Models
```{r Table of Structural Models}
##Creating function to compute table
fit_stats <- function(model, varname){
  modelframe <- as.data.frame(fitmeasures(model, c("cfi","srmr","rmsea")))
names(modelframe)[1]<- varname
modelframe$index <- NA
modelframe[1,2]<-"CFI"
modelframe[2,2]<-"SRMR"
modelframe[3,2]<-"RMSEA"
modelframe[4,2]<-"AIC"
modelframe[4,1]<-AIC(model)
modelframe[5,2]<-"BIC"
modelframe[5,1]<-BIC(model)
x <- lavInspect(model,'fit')
modelframe[6,1] <- x['chisq']
modelframe[6,2] <- "Chi-sq."
modelframe[7,1] <- x['df']
modelframe[7,2] <- "df"
modelframe[1] <- round(modelframe[1],3)
return(modelframe)
}

sdrome.stat <- fit_stats(sdrome.fit, 'Syndrome_Model')
achen.stat <- fit_stats(achen.fit, 'Internalizing/Externalizing Model')
p.stat <- fit_stats(p.fit, 'P-Factor Model')

table.1 <- merge(sdrome.stat, achen.stat, by = 'index') %>% 
  merge(p.stat, by='index') 
names(table.1)[1] <- ""


tab_df(table.1, title='Structural Model Fit Statistics', 
       file = 'Tables/Str.Fit.html')

```


#Sleep Regressions 
Sleep variables to use: 
Sleep Disturbances
Daytime Sleepiness
Sleep Hygiene 

##Sleep Disturbances
```{r Sleep Disturbances}
#Syndrome - Sleep Disturbances 

sdrome.dist <- '
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        
        SEP =~ SEP_1 + SEP_2 + SEP_3

        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3

        SOC =~ SOC_1 + SOC_2 + SOC_3

        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

        CON =~ Con_1 + Con_2 + Con_3

        ODD =~ ODD_1 + ODD_2 + ODD_3 

        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3

        Ina =~ In_1 + In_2 + In_3

        Anti =~ Anti_1 + Anti_2 + Anti_3

    #Regressions
        CDI ~ disturb_mean
        
        SEP ~ disturb_mean

        PHYS ~ disturb_mean

        SOC ~ disturb_mean 

        PSWQ ~ disturb_mean

        CON ~ disturb_mean

        ODD ~ disturb_mean

        Hyp ~ disturb_mean

        Ina ~ disturb_mean

        Anti ~ disturb_mean
        '
    sdrome.dist.fit <- cfa(sdrome.dist, data=Parcel, missing='fiml')
    #summary(sdrome.dist.fit, fit.measures=T, standardized=T)
    
    
########################
#Internalizing/Externalizing - Sleep Disturbances
    
achen.dist <- '
 #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ Hyp + CON + ODD + Ina + Anti


    
      #Modification Indices
      CON ~~ ODD

  #Regressions
    INT ~ disturb_mean
    EXT ~ disturb_mean

'

achen.dist.fit <- sem(achen.dist, data=Parcel, missing='fiml')
#summary(achen.dist.fit, fit.measures=T, standardized=T)


########################
#p-factor - Sleep Disturbances


pfactor.dist <- '
  #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ CON + ODD + Hyp + Ina + Anti
  P =~ PHYS + CDI + SEP + PSWQ + CON + ODD + Hyp + Ina + Anti



  #Fixing variance of variables with negative variance & variance that was not significantly different than zero
    Hyp ~~ 0*Hyp
    ODD ~~ 0*ODD
    CON ~~ 0*CON

  #Regressions
    INT ~ disturb_mean
    EXT ~ disturb_mean
    P ~ disturb_mean

'

p.dist.fit <- sem(pfactor.dist, data=Parcel, orthogonal=T, missing='fiml')
#summary(p.dist.fit, fit.measures=T, standardized=T)
```

##Daytime Sleepiness
```{r Daytime Sleepiness}
#Syndrome - Daytime Sleepiness

sdrome.sleep <- '
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        
        SEP =~ SEP_1 + SEP_2 + SEP_3

        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3

        SOC =~ SOC_1 + SOC_2 + SOC_3

        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

        CON =~ Con_1 + Con_2 + Con_3

        ODD =~ ODD_1 + ODD_2 + ODD_3 

        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3

        Ina =~ In_1 + In_2 + In_3

        Anti =~ Anti_1 + Anti_2 + Anti_3

    #Regressions
        CDI ~ sleepiness_mean
        
        SEP ~ sleepiness_mean

        PHYS ~ sleepiness_mean

        SOC ~ sleepiness_mean 

        PSWQ ~ sleepiness_mean

        CON ~ sleepiness_mean

        ODD ~ sleepiness_mean

        Hyp ~ sleepiness_mean

        Ina ~ sleepiness_mean

        Anti ~ sleepiness_mean
        '
    sdrome.sleep.fit <- cfa(sdrome.sleep, data=Parcel, missing='fiml')
    #summary(sdrome.sleep.fit, fit.measures=T, standardized=T)
    
    
########################
#Internalizing/Externalizing - Daytime Sleepiness
    
achen.sleep <- '
  #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ Hyp + CON + ODD + Ina + Anti


    
      #Modification Indices
      CON ~~ ODD

  #Regressions
    INT ~ sleepiness_mean
    EXT ~ sleepiness_mean

'

achen.sleep.fit <- sem(achen.sleep, data=Parcel, missing='fiml')
#summary(achen.sleep.fit, fit.measures=T, standardized=T)


########################
#p-factor - Daytime Sleepiness


pfactor.sleep <- '
  #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ CON + ODD + Hyp + Ina + Anti
  P =~ PHYS + CDI + SEP + PSWQ + CON + ODD + Hyp + Ina + Anti



  #Fixing variance of variables with negative variance & variance that was not significantly different than zero
    Hyp ~~ 0*Hyp
    ODD ~~ 0*ODD
    CON ~~ 0*CON

  #Regressions
    INT ~ sleepiness_mean
    EXT ~ sleepiness_mean
    P ~ sleepiness_mean

'

p.sleep.fit <- sem(pfactor.sleep, data=Parcel, orthogonal=T, missing='fiml')
#summary(p.sleep.fit, fit.measures=T, standardized=T)
```


##Sleep Hygiene
```{r Sleep Hygiene}
#Syndrome - Sleep Hygiene

sdrome.hyg <- '
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        
        SEP =~ SEP_1 + SEP_2 + SEP_3

        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3

        SOC =~ SOC_1 + SOC_2 + SOC_3

        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

        CON =~ Con_1 + Con_2 + Con_3

        ODD =~ ODD_1 + ODD_2 + ODD_3 

        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3

        Ina =~ In_1 + In_2 + In_3

        Anti =~ Anti_1 + Anti_2 + Anti_3

    #Regressions
        CDI ~ hygiene_mean
        
        SEP ~ hygiene_mean

        PHYS ~ hygiene_mean

        SOC ~ hygiene_mean 

        PSWQ ~ hygiene_mean

        CON ~ hygiene_mean

        ODD ~ hygiene_mean

        Hyp ~ hygiene_mean

        Ina ~ hygiene_mean

        Anti ~ hygiene_mean
        '
    sdrome.hyg.fit <- cfa(sdrome.hyg, data=Parcel, missing='fiml')
    #summary(sdrome.hyg.fit, fit.measures=T, standardized=T)
    
    
########################
#Internalizing/Externalizing - Sleep Hygiene
    
achen.hyg <- '
  #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ Hyp + CON + ODD + Ina + Anti


    
      #Modification Indices
      CON ~~ ODD

  #Regressions
    INT ~ hygiene_mean
    EXT ~ hygiene_mean

'

achen.hyg.fit <- sem(achen.hyg, data=Parcel, missing='fiml')
#summary(achen.hyg.fit, fit.measures=T, standardized=T)


########################
#p-factor - Sleep Hygiene


pfactor.hyg <- '
  #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ CON + ODD + Hyp + Ina + Anti
  P =~ PHYS + CDI + SEP + PSWQ + CON + ODD + Hyp + Ina + Anti



  #Fixing variance of variables with negative variance & variance that was not significantly different than zero
    Hyp ~~ 0*Hyp
    ODD ~~ 0*ODD
    CON ~~ 0*CON

  #Regressions
    INT ~ hygiene_mean
    EXT ~ hygiene_mean
    P ~ hygiene_mean

'

p.hyg.fit <- sem(pfactor.hyg, data=Parcel, orthogonal=T, missing='fiml')
#summary(p.hyg.fit, fit.measures=T, standardized=T)
```

```{r Paremeter Estimates}

##Creating function to compute parameter table
param <- function(model, operator){
  modelframe <- tidy(model) %>% 
    filter(op == operator) %>% 
    select(term, estimate, std.error, std.lv, std.all, p.value)  
    modelframe[2:6] <- round(modelframe[2:6], 3)
    names(modelframe)[1] <- "Term"
    names(modelframe)[2] <- "Estimate"
    names(modelframe)[3] <- "Std Error"
    names(modelframe)[4] <- "Standardized (Latent)"
    names(modelframe)[5] <- "Standardized (All)"
    names(modelframe)[6] <- "p-value"
    for(i in nrow(modelframe))
    {ifelse(modelframe[i,6]==0,'<.001', modelframe[i,6]) 
      }
return(modelframe)
}

##Sleep Disturbances Tables
sdrome.dist.para <- param(sdrome.dist.fit, '~')
  tab_df(sdrome.dist.para, title='Sleep Disturbance - Syndrome Model', 
         file = 'Tables/Sleep_Dist_Sdrome.html')
achen.dist.para <- param(achen.dist.fit, '~')
  tab_df(achen.dist.para, title='Sleep Disturbance - Int/Ext', 
         file = 'Tables/Sleep_Dist_achen.html')
p.dist.para <- param(p.dist.fit, '~')
  tab_df(p.dist.para, title='Sleep Disturbance - P.Factor', 
         file = 'Tables/Sleep_Dist_pfactor.html')
  
##Daytime Sleepiness Tables
sdrome.sleep.para <- param(sdrome.sleep.fit, '~')
  tab_df(sdrome.sleep.para, title='Daytime Sleepiness - Syndrome Model', 
         file = 'Tables/Sleepiness_Sdrome.html')
achen.sleep.para <- param(achen.sleep.fit, '~')
  tab_df(achen.sleep.para, title='Daytime Sleepiness - Int/Ext', 
         file = 'Tables/Sleepiness_achen.html')
p.sleep.para <- param(p.sleep.fit, '~')
  tab_df(p.sleep.para, title='Daytime Sleepiness - P.Factor', 
         file = 'Tables/Sleepiness_pfactor.html')

##Sleep Hygiene Tables
sdrome.hyg.para <- param(sdrome.hyg.fit, '~')
  tab_df(sdrome.hyg.para, title='Sleep Hygiene - Syndrome Model', 
         file = 'Tables/Sleep_Hyg_Sdrome.html')
achen.hyg.para <- param(achen.hyg.fit, '~')
  tab_df(achen.hyg.para, title='Sleep Hygiene - Int/Ext', 
         file = 'Tables/Sleep_Hyg_achen.html')
p.hyg.para <- param(p.hyg.fit, '~')
  tab_df(p.hyg.para, title='Sleep Hygiene - P.Factor', 
         file = 'Tables/Sleep_Hyg_pfactor.html')
  

  ######Merging across models 
  
  #syndrome Parameters
  sdrome.para <- union(sdrome.dist.para, sdrome.sleep.para) %>%
    union(sdrome.hyg.para) %>%
    arrange(Term)
    tab_df(sdrome.para, title='Syndrome Parameters', 
       file = 'Tables/Param_Syndrome.html')
    
  
  #Int/Ext Parameters
  achen.para <- union(achen.dist.para, achen.sleep.para) %>%
    union(achen.hyg.para) %>%
    arrange(Term)
    tab_df(achen.para, title='Int/Ext Parameters', 
       file = 'Tables/Param_Achen.html')   
    
    
    #p-factor Parameters
  p.para <- union(p.dist.para, p.sleep.para) %>%
    union(p.hyg.para) %>%
    arrange(Term)
    tab_df(p.para, title='P-Factor Parameters', 
       file = 'Tables/Param_P.html') 
  

```


##ALL SLEEP VARIABLES
```{r ALL SLEEP}
#Syndrome - All Sleep

sdrome.all <- '
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        
        SEP =~ SEP_1 + SEP_2 + SEP_3

        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3

        SOC =~ SOC_1 + SOC_2 + SOC_3

        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

        CON =~ Con_1 + Con_2 + Con_3

        ODD =~ ODD_1 + ODD_2 + ODD_3 

        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3

        Ina =~ In_1 + In_2 + In_3

        Anti =~ Anti_1 + Anti_2 + Anti_3

    #Regressions
        CDI ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
        SEP ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
        PHYS ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
        SOC ~ Age + Gender + disturb_mean  + hygiene_mean + sleepiness_mean
        PSWQ ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
        CON ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
        ODD ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
        Hyp ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
        Ina ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
        Anti ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
        '
    sdrome.all.fit <- cfa(sdrome.all, data=Parcel, missing='fiml')

    #summary(sdrome.all.fit, fit.measures=T, standardized=T)
   
    
    
########################
#Internalizing/Externalizing - ALL SLEEP
    
achen.all <- '
 #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ Hyp + CON + ODD + Ina + Anti


    
      #Modification Indices
      CON ~~ ODD

  #Regressions
    INT ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
    EXT ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean

'

achen.all.fit <- sem(achen.all, data=Parcel, missing='fiml')
#summary(achen.all.fit, fit.measures=T, standardized=T)


########################
#p-factor - ALL SLEEP


pfactor.all <- '
  #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ CON + ODD + Hyp + Ina + Anti
  P =~ PHYS + CDI + SEP + PSWQ + CON + ODD + Hyp + Ina + Anti



  #Fixing variance of variables with negative variance & variance that was not significantly different than zero
    Hyp ~~ 0*Hyp
    ODD ~~ 0*ODD
    CON ~~ 0*CON

  #Regressions
    INT ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
    EXT ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean
    P ~ Age + Gender + disturb_mean + hygiene_mean + sleepiness_mean

'

p.all.fit <- sem(pfactor.all, data=Parcel, orthogonal=T, missing='fiml')
#summary(p.all.fit, fit.measures=T, standardized=T)


##All Sleep Tables
sdrome.all.para <- param(sdrome.all.fit, '~')
  tab_df(sdrome.all.para, title='All Sleep & Age - Syndrome Model', 
         file = 'Tables/ALL_SLEEP_Age_Sdrome.html')
achen.all.para <- param(achen.all.fit, '~')
  tab_df(achen.all.para, title='All Sleep & Age - Int/Ext', 
         file = 'Tables/ALL_SLEEP_Age_achen.html')
p.all.para <- param(p.all.fit, '~')
  tab_df(p.all.para, title='All Sleep & Age - P.Factor', 
         file = 'Tables/ALL_SLEEP_Age_pfactor.html')
```


#Higher Factor
```{r higher factor not converging}

########################
#h-factor - ALL SLEEP


hfactor.all <- '
  #Internalizing
        CDI =~ CDIp_1 + CDIp_2 + CDIp_3
        SEP =~ SEP_1 + SEP_2 + SEP_3
        PHYS =~ PHYS_1 + PHYS_2 + PHYS_3
        PSWQ =~ PSWQp_1 + PSWQp_2 + PSWQp_3

  #Externalizing
        CON =~ Con_1 + Con_2 + Con_3
        ODD =~ ODD_1 + ODD_2 + ODD_3 
        Hyp =~ Hyp_1 + Hyp_2 + Hyp_3
        Ina =~ In_1 + In_2 + In_3
        Anti =~ Anti_1 + Anti_2 + Anti_3

  INT =~ PHYS + CDI + SEP + PSWQ
  EXT =~ CON + ODD + Hyp + Ina + Anti
  H =~ INT + EXT



  #Fixing variance of variables with negative variance & variance that was not significantly different than zero
    Hyp ~~ 0*Hyp
    ODD ~~ 0*ODD
    CON ~~ 0*CON

  #Regressions
    #P ~ disturb_mean + hygiene_mean + sleepiness_mean

'

h.all.fit <- sem(hfactor.all, data=Parcel, orthogonal=T, missing='fiml')
summary(h.all.fit, fit.measures=T, standardized=T)

```

